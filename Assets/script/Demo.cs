using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Demo : MonoBehaviour
{
    /// <summary>
    /// 4分音符
    /// </summary>
    [SerializeField]private float tempo;
    private float tempoms;
    private float currentTime;

    private Animator[] anime = new Animator[88];
    private sounder[] sound = new sounder[88];
    public GameObject[] KeyObjects;

    ///これは消しましょう
    ///楽譜
    private int[,] ScoreSelf = new int[,] { {89, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 43, -43, 43, -43, 89, 89, 89, 89, 43, 43, 43, 43, -43, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 46, 46, 46, 46, -46, 89, 89, 89, 47, 47, 47, 47, -47, 89, 89, 89, 42, 42, 42, 42, -42, 89, 89, 89, 43, -43, 43, -43, 89, 89, 89, 89, 43, 43, 43, 43, -43, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 42, -42, 42, -42, 89, 89, 89, 89, 42, 42, 42, 42, -42, 89, 42, -42, 42, -42, 89, 89, 42, 42, 42, 42, -42, 89, 42, -42, 89, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 43, -43, 43, -43, 89, 89, 89, 89, 43, 43, 43, 43, -43, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 46, 46, 46, 46, -46, 89, 89, 89, 47, 47, 47, 47, -47, 89, 89, 89, 42, 42, 42, 42, -42, 89, 89, 89, 43, -43, 43, -43, 89, 89, 89, 89, 43, 43, 43, 43, -43, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, 45, 45, -45, 89, 89, 89, 42, -42, 42, -42, 89, 89, 89, 89, 42, 42, -42, 89, 42, 42, 42, 42, 42, 42, 42, -42, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14 },
                   {89, 89, 89, 89, 26, 26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 28, -28, 28, -28, 89, 89, 89, 89, 28, 28, 28, 28, -28, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, 45, 45, -45, 89, 45, -45, 45, -45, 89, 89, 45, 45, 45, 45, -45, 89, 45, -45, 89, 89, 89, 89, 26, 26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 28, -28, 28, -28, 89, 89, 89, 89, 28, 28, 28, 28, -28, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 89, 89, 45, -45, 45, -45, 89, 89, 89, 89, 45, 45, -45, 89, 45, 45, 45, 45, 45, 45, 45, -45, 89, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18 },
                   {89, 89, 89, 89, 30, 30, 30, -30, 89, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 31, -31, 31, -31, 89, 89, 89, 89, 31, 31, 31, 31, -31, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, -30, 30, -30, 89, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 31, -31, 31, -31, 89, 89, 89, 89, 31, 31, 31, 31, -31, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, 26, 26, -26, 89, 26, -26, 26, -26, 89, 89, 26, 26, 26, 26, 26, 89, 26, -26, 89, 89, 89, 89, 30, 30, 30, -30, 89, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 31, -31, 31, -31, 89, 89, 89, 89, 31, 31, 31, 31, -31, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 30, -30, 30, -30, 89, 89, 89, 89, 30, 30, 30, 30, -30, 89, 89, 89, 33, -33, 33, -33, 89, 89, 89, 89, 33, 33, 33, 33, -33, 89, 89, 89, 26, -26, 26, -26, 89, 89, 89, 89, 26, 26, -26, 89, 26, 26, 26, 26, 26, 26, 26, -26, 89, 89, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21 },
                   {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 },
                   {},
                   {62, 62, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, -62, 89, 67, 67, 67, 67, 67, 67, 67, 67, -67, 89, 67, 67, 67, 67, -67, 89, 69, 69, 69, 69, -69, 89, 69, 69, 70, 70, 70, 70, -70, 89, 70, 70, 71, 71, 71, 71, -71, 89, 71, 71, 66, 66, 66, 66, -66, 89, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, -67, 89, 67, 67, 67, 67, -67, 89, 69, 69, 69, 69, 69, 69, 69, 69, -69, 89, 69, 69, 69, 69, -69, 89, 62, 62, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, -62, 89, 62, 62, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, -62, 89, 67, 67, 67, 67, 67, 67, 67, 67, -67, 89, 67, 67, 67, 67, -67, 89, 69, 69, 69, 69, -69, 89, 69, 69, 70, 70, 70, 70, -70, 89, 70, 70, 71, 71, 71, 71, -71, 89, 71, 71, 66, 66, 66, 66, -66, 89, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, -67, 89, 67, 67, 67, 67, -67, 89, 69, 69, 69, 69, 69, 69, 69, 69, -69, 89, 69, 69, 69, 69, -69, 89, 62, 62, 62, 62, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, -62, 89, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62 },
                   {89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, -69, 89, 89, 89, 89, 89, 89, 89, -70, 89, 89, 89, 89, 89, 89, 89, -71, 89, 89, 89, 89, 89, 89, 89, -66, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, -69, 89, 89, 89, 89, 89, 89, 89, -70, 89, 89, 89, 89, 89, 89, 89, -71, 89, 89, 89, 89, 89, 89, 89, -66, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 69, 69, 69, 69, 69, 69, 69, 69, -69, 89, 69, 69, 89, 69, -69, 89, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69 },
                   {},
                   {},
                   {}};

    private const int frameRate = 288;



    ///楽譜
    ///押す 0～87
    ///離す -1～-87(0の逆は88)
    ///曲ごとにframe数変えてください
    private int[,] ScoreR= new int[frameRate, 5];
    private int[,] ScoreL= new int[frameRate, 5];


    /// 楽譜表
    /// 
    /// 0 <= (n) <= 6
    /// 
    /// three  : n=0
    /// two    : n=1
    /// one    : n=2
    /// BASE   : n=3
    /// mone   : n=4
    /// mtwo   : n=5
    /// mthree : n=6
    /// 
    ///             ON           OFF
    /// fC    : 0           , 88
    /// (n)C  : n * 12 + 1  , - n * 12 + 1
    /// (n)C# : n * 12 + 2  , - n * 12 + 2
    /// (n)D  : n * 12 + 3  , - n * 12 + 3
    /// (n)D# : n * 12 + 4  , - n * 12 + 4
    /// (n)E  : n * 12 + 5  , - n * 12 + 5
    /// (n)F  : n * 12 + 6  , - n * 12 + 6
    /// (n)F# : n * 12 + 7  , - n * 12 + 7
    /// (n)G  : n * 12 + 8  , - n * 12 + 8
    /// (n)G# : n * 12 + 9  , - n * 12 + 9
    /// (n)A  : n * 12 + 10 , - n * 12 + 10
    /// (n)A# : n * 12 + 11 , - n * 12 + 11
    /// (n)B  : n * 12 + 12 , - n * 12 + 12
    /// mfA   : 85          , -85
    /// mfA#  : 86          , -86
    /// mfB   : 87          , -87
    /// 
    /// none(休符)  : 89

    private int frame = 0;

    private int i = 0;

    // Start is called before the first frame update
    void Start()
    {
        for (i = 0; i < 88; i++)
        {
            anime[i] = KeyObjects[i].transform.GetComponent<Animator>();
            sound[i] = KeyObjects[i].GetComponent<sounder>();
        }

        for (i = 0; i <  frameRate; i++)
        {
            ScoreR[i, 0] = ScoreSelf[0, i];
            ScoreR[i, 1] = ScoreSelf[1, i];
            ScoreR[i, 2] = ScoreSelf[2, i];
            ScoreR[i, 3] = ScoreSelf[3, i];
            ScoreR[i, 4] = ScoreSelf[4, i];
            ScoreL[i, 0] = ScoreSelf[5, i];
            ScoreL[i, 1] = ScoreSelf[6, i];
            ScoreL[i, 2] = ScoreSelf[7, i];
            ScoreL[i, 3] = ScoreSelf[8, i];
            ScoreL[i, 4] = ScoreSelf[9, i];
        }
        
        tempoms = 60 / tempo;
        ///Scoreのframe2個分で16分音符を表現する
        ///1個目 : 押すアニメ, 2個目 : 離すアニメ
        /////////////////// 4 ,8 ,16
        tempoms = tempoms / 2 /2 /2;

        InvokeRepeating("pushKeyMan", 60/tempo, tempoms);
    }

    void pushKeyMan()
    {
        int scoreI;

        for (scoreI = 0 ; scoreI < 5 ; scoreI++)
        {
            if((ScoreL[frame, scoreI] >= 0)&&(ScoreL[frame, scoreI] < 88))
            {
                imaginePusher(ScoreL[frame, scoreI]);
            }
            else if ((ScoreL[frame, scoreI] < 0) && (ScoreL[frame, scoreI] >= -87))
            {
                imagineDisser(-ScoreL[frame, scoreI]);
            }
            else if (ScoreL[frame, scoreI] == 88)
            {
                imagineDisser(0);
            }
        }

        for (scoreI = 0 ; scoreI < 5 ; scoreI++)
        {
            if ((ScoreR[frame, scoreI] >= 0) && (ScoreR[frame, scoreI] < 88))
            {
                imaginePusher(ScoreR[frame, scoreI]);
            }
            else if ((ScoreR[frame, scoreI] < 0) && (ScoreR[frame, scoreI] >= -87))
            {
                imagineDisser(-ScoreR[frame, scoreI]);
            }
            else if (ScoreR[frame, scoreI] == 88)
            {
                imagineDisser(0);
            }
        }

        frame++;

        ///frameが終わったら止める
        if (frame > frameRate-1)
        {
            for (i = 0; i < 88; i++)
            {
                imagineDisser(i);
            }
            CancelInvoke();
        }
    }

    void imaginePusher(int ind)
    {
        sound[ind].OnPush();
        anime[ind].speed = 10;
        anime[ind].SetBool("Open", true);
    }
    void imagineDisser(int ind)
    {
        anime[ind].speed = 2;
        anime[ind].SetBool("Open", false);
    }
}
